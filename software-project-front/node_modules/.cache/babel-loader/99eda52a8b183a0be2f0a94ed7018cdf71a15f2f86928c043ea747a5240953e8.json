{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: \"Order\",\n  data() {\n    return {\n      currUser: JSON.parse(localStorage.getItem(\"currUser\")),\n      drawerEdit: false,\n      drawerAdd: false,\n      token: localStorage.getItem(\"token\"),\n      dStatue: null,\n      dId: null,\n      sId: null,\n      currentPage: 1,\n      pageLimits: [10, 20, 30, 40],\n      limit: 10,\n      itemTotal: 10,\n      order: [],\n      orderItem: {},\n      drawerInfo: false,\n      drawerPay: false\n    };\n  },\n  methods: {\n    handleClose(done) {\n      done();\n      this.orderItem = {};\n    },\n    getOrder() {\n      console.log(this.token);\n      this.axios.get(\"http://localhost:8123/api/order/all\", {\n        params: {\n          token: this.token,\n          dStatue: this.dStatue,\n          dId: this.dId,\n          sId: this.sId,\n          page: this.currentPage,\n          limit: this.limit,\n          bId: this.currUser.uid\n        }\n      }, {\n        emulateJSON: true\n      }).then(resp => {\n        console.log(resp.data.data.records);\n        if (resp.data.message === \"ok\") {\n          this.itemTotal = resp.data.data.total;\n          this.order = resp.data.data.records;\n          this.order.forEach(item => {\n            console.log(item.bid);\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    handleSizeChange(limit) {\n      this.limit = limit;\n      this.currentPage = 1;\n      this.getOrder(this.currentPage, this.limit);\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.getOrder(this.currentPage, this.limit);\n    },\n    search() {\n      this.getOrder();\n    },\n    handleShow(index, row) {\n      this.orderItem = row;\n      console.log(this.orderItem);\n      this.drawerInfo = true;\n    },\n    toPay(index, row) {\n      this.orderItem = row;\n      console.log(this.orderItem);\n      this.drawerPay = true;\n    },\n    pay() {\n      this.axios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n      const params = new URLSearchParams();\n      params.append(\"token\", this.token);\n      params.append(\"dId\", this.orderItem.did);\n      this.axios.post(\"http://localhost:8123/api/order/updatePay\", params).then(resp => {\n        console.log(resp);\n        if (resp.data.message === \"支付成功！\") {\n          this.$message({\n            message: resp.data.message,\n            type: \"success\"\n          });\n          this.drawerPay = false;\n          this.getOrder();\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n\n      // 计算平台利润\n      this.axios.post(\"http://localhost:8123/api/order/profit\", params).then(resp => {\n        console.log(resp, \"<<<<利润\");\n        if (resp.data.message === \"支付成功！\") {\n          this.$message({\n            message: resp.data.message,\n            type: \"success\"\n          });\n          this.drawerPay = false;\n          this.getOrder();\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.orderItem = {};\n    }\n  },\n  created() {\n    this.getOrder();\n  }\n};","map":{"version":3,"names":["name","data","currUser","JSON","parse","localStorage","getItem","drawerEdit","drawerAdd","token","dStatue","dId","sId","currentPage","pageLimits","limit","itemTotal","order","orderItem","drawerInfo","drawerPay","methods","handleClose","done","getOrder","console","log","axios","get","params","page","bId","uid","emulateJSON","then","resp","records","message","total","forEach","item","bid","catch","error","handleSizeChange","handleCurrentChange","val","search","handleShow","index","row","toPay","pay","defaults","headers","post","URLSearchParams","append","did","$message","type","created"],"sources":["src/views/Order/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"padding-bottom: 20px\">\n      <el-input\n        placeholder=\"订单状态\"\n        v-model=\"dStatue\"\n        clearable\n        style=\"width: 150px\"\n      >\n      </el-input>\n      <el-input\n        placeholder=\"搜索租借人ID\"\n        v-model=\"sId\"\n        clearable\n        style=\"width: 150px\"\n      >\n      </el-input>\n      <el-input\n        placeholder=\"搜索订单号\"\n        v-model=\"dId\"\n        clearable\n        style=\"width: 150px\"\n      >\n      </el-input>\n      <el-button type=\"primary\" @click=\"search\">搜索</el-button>\n    </div>\n\n    <el-table\n      ref=\"multipleTable\"\n      :data=\"order\"\n      tooltip-effect=\"dark\"\n      style=\"width: 100%\"\n    >\n      <el-table-column\n        prop=\"did\"\n        label=\"订单ID\"\n        width=\"120\"\n        sortable\n      ></el-table-column>\n      <el-table-column prop=\"dstatue\" label=\"支付状态\" width=\"120\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.dstatue ? \"已支付\" : \"未支付\" }}\n        </template>\n      </el-table-column>\n      <el-table-column\n        prop=\"damount\"\n        label=\"订单金额\"\n        width=\"120\"\n        sortable\n      ></el-table-column>\n      <el-table-column\n        prop=\"ddate\"\n        label=\"创建日期\"\n        show-overflow-tooltip\n      ></el-table-column>\n      <el-table-column prop=\"sid\" label=\"卖家ID\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"gid\" label=\"商品ID\" width=\"120\" sortable>\n      </el-table-column>\n      <el-table-column\n          label=\"订单金额\"\n          width=\"120\"\n          sortable\n      >\n        <template slot-scope=\"scope\">\n          {{ calculateAmount(scope.row.startTime, scope.row.endTime) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleShow(scope.$index, scope.row)\"\n            >查看</el-button\n          >\n          <el-button\n            size=\"mini\"\n            type=\"primary\"\n            @click=\"toPay(scope.$index, scope.row)\"\n            >支付</el-button\n          >\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"currentPage\"\n      :page-sizes=\"pageLimits\"\n      :page-size=\"limit\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"itemTotal\"\n    >\n    </el-pagination>\n\n    <el-drawer\n      ref=\"drawerRef\"\n      :visible.sync=\"drawerInfo\"\n      direction=\"rtl\"\n      :before-close=\"handleClose\"\n    >\n      <div style=\"margin: 10px\">\n        <el-descriptions title=\"订单信息\">\n          <el-descriptions-item label=\"订单ID\">{{\n            this.orderItem.did\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"订单状态\">{{\n            this.orderItem.dstatue ? \"已支付\" : \"未支付\"\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"订单金额\">{{\n              calculateAmount(orderItem.startTime, orderItem.endTime)\n            }}\n          </el-descriptions-item>\n          <br />\n          <el-descriptions-item label=\"租借人ID\">{{\n            this.orderItem.sid\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"雨伞ID\">{{\n            this.orderItem.gid\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"日期\">{{\n            new Date(this.orderItem.ddate).toLocaleDateString()\n          }}</el-descriptions-item\n          ><br />\n        </el-descriptions>\n      </div>\n    </el-drawer>\n\n    <el-drawer\n      :visible.sync=\"drawerPay\"\n      direction=\"rtl\"\n      :before-close=\"handleClose\"\n    >\n      <div style=\"margin: 10px\">\n        <el-descriptions title=\"订单信息\">\n          <el-descriptions-item label=\"订单ID\">{{\n            this.orderItem.did\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"订单状态\">{{\n            this.orderItem.dstatue ? \"已支付\" : \"未支付\"\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"订单金额\">{{\n              calculateAmount(orderItem.startTime, orderItem.endTime)\n            }}\n          </el-descriptions-item>\n          <br />\n          <el-descriptions-item label=\"卖家ID\">{{\n            this.orderItem.sid\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"商品ID\">{{\n            this.orderItem.gid\n          }}</el-descriptions-item\n          ><br />\n          <el-descriptions-item label=\"日期\">{{\n            new Date(this.orderItem.ddate).toLocaleDateString()\n          }}</el-descriptions-item\n          ><br />\n        </el-descriptions>\n\n        <el-button type=\"primary\" v-show=\"!this.orderItem.dstatue\" @click=\"pay\"\n          >支付</el-button\n        >\n        <el-button type=\"primary\" v-show=\"this.orderItem.dstatue\" disabled\n          >已支付</el-button\n        >\n      </div>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Order\",\n  data() {\n    return {\n      currUser: JSON.parse(localStorage.getItem(\"currUser\")),\n      drawerEdit: false,\n      drawerAdd: false,\n      token: localStorage.getItem(\"token\"),\n      dStatue: null,\n      dId: null,\n      sId: null,\n      currentPage: 1,\n      pageLimits: [10, 20, 30, 40],\n      limit: 10,\n      itemTotal: 10,\n      order: [],\n      orderItem: {},\n      drawerInfo: false,\n      drawerPay: false,\n    };\n  },\n  methods: {\n    handleClose(done) {\n      done();\n      this.orderItem = {};\n    },\n    getOrder() {\n      console.log(this.token);\n      this.axios\n        .get(\n          \"http://localhost:8123/api/order/all\",\n          {\n            params: {\n              token: this.token,\n              dStatue: this.dStatue,\n              dId: this.dId,\n              sId: this.sId,\n              page: this.currentPage,\n              limit: this.limit,\n              bId: this.currUser.uid,\n            },\n          },\n          { emulateJSON: true }\n        )\n        .then((resp) => {\n          console.log(resp.data.data.records);\n          if (resp.data.message === \"ok\") {\n            this.itemTotal = resp.data.data.total;\n            this.order = resp.data.data.records;\n            this.order.forEach((item) => {\n              console.log(item.bid);\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    handleSizeChange(limit) {\n      this.limit = limit;\n      this.currentPage = 1;\n      this.getOrder(this.currentPage, this.limit);\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.getOrder(this.currentPage, this.limit);\n    },\n    search() {\n      this.getOrder();\n    },\n    handleShow(index, row) {\n      this.orderItem = row;\n      console.log(this.orderItem);\n      this.drawerInfo = true;\n    },\n    toPay(index, row) {\n      this.orderItem = row;\n      console.log(this.orderItem);\n      this.drawerPay = true;\n    },\n    pay() {\n      this.axios.defaults.headers.post[\"Content-Type\"] =\n        \"application/x-www-form-urlencoded\";\n      const params = new URLSearchParams();\n      params.append(\"token\", this.token);\n      params.append(\"dId\", this.orderItem.did);\n      this.axios\n        .post(\"http://localhost:8123/api/order/updatePay\", params)\n        .then((resp) => {\n          console.log(resp);\n          if (resp.data.message === \"支付成功！\") {\n            this.$message({\n              message: resp.data.message,\n              type: \"success\",\n            });\n            this.drawerPay = false;\n            this.getOrder();\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n        // 计算平台利润\n        this.axios\n        .post(\"http://localhost:8123/api/order/profit\", params)\n        .then((resp) => {\n          console.log(resp,\"<<<<利润\");\n          if (resp.data.message === \"支付成功！\") {\n            this.$message({\n              message: resp.data.message,\n              type: \"success\",\n            });\n            this.drawerPay = false;\n            this.getOrder();\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      \n      this.orderItem = {};\n    }\n  },\n  created() {\n    this.getOrder();\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}