{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      loginForm: {\n        email: \"\",\n        password: \"\",\n        token: ''\n      }\n    };\n  },\n  methods: {\n    onLogin() {\n      let formData = new FormData();\n      formData.append(\"email\", this.loginForm.email);\n      formData.append(\"password\", this.loginForm.password);\n      this.axios.post(\"http://localhost:8123/api/user/login/\", formData).then(resp => {\n        let data = resp.data;\n        if (data.message === \"登录成功\") {\n          localStorage.setItem(\"token\", data.data.token);\n          this.token = data.data.token;\n          this.getInfo();\n          this.$router.push({\n            path: \"/\"\n          });\n          this.$message({\n            message: data.message,\n            type: \"success\"\n          });\n        } else {\n          this.$message({\n            message: data.message,\n            type: \"error\"\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    toRegister() {\n      this.$router.push({\n        path: \"/Register\"\n      });\n    },\n    getInfo() {\n      this.axios.get(\"http://localhost:8123/api/user/tokenInfo\", {\n        params: {\n          token: this.token\n        }\n      }).then(resp => {\n        localStorage.setItem('currUser', JSON.stringify(resp.data.data));\n        console.log(JSON.parse(localStorage.getItem('currUser')));\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","email","password","token","methods","onLogin","formData","FormData","append","axios","post","then","resp","message","localStorage","setItem","getInfo","$router","push","path","$message","type","catch","error","console","log","toRegister","get","params","JSON","stringify","parse","getItem"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n  <body id=\"poster\">\n    <el-form\n      class=\"login-container\"\n      :model=\"loginForm\"\n      label-width=\"0px\"\n      lable-position=\"left\"\n    >\n      <h3 class=\"login_title\">\n        系统登录\n        <el-button @click=\"toRegister\">点我注册</el-button>\n      </h3>\n      <el-form-item label=\"\">\n        <el-input\n          type=\"text\"\n          v-model=\"loginForm.email\"\n          placeholder=\"邮箱\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\">\n        <el-input\n          type=\"password\"\n          v-model=\"loginForm.password\"\n          placeholder=\"密码\"\n        ></el-input>\n      </el-form-item>\n\n      <el-form-item style=\"width: 100%\">\n        <el-button\n          type=\"primary\"\n          style=\"width: 100%; background: #505458; border: none\"\n          @click=\"onLogin\"\n          >登录</el-button\n        >\n      </el-form-item>\n    </el-form>\n  </body>\n</template>\n\n<script>\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      loginForm: {\n        email: \"\",\n        password: \"\",\n        token: ''\n      },\n    };\n  },\n  methods: {\n    onLogin() {\n      let formData = new FormData();\n      formData.append(\"email\", this.loginForm.email);\n      formData.append(\"password\", this.loginForm.password);\n      this.axios\n        .post(\"http://localhost:8123/api/user/login/\", formData)\n        .then((resp) => {\n\n          let data = resp.data;\n          if (data.message === \"登录成功\") {\n            localStorage.setItem(\"token\", data.data.token);\n            this.token = data.data.token;\n            this.getInfo();\n            this.$router.push({ path: \"/\" });\n            this.$message({\n              message: data.message,\n              type: \"success\",\n            });\n          } else {\n            this.$message({\n              message: data.message,\n              type: \"error\",\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    toRegister() {\n      this.$router.push({ path: \"/Register\" });\n    },\n    getInfo(){\n      this.axios.get(\"http://localhost:8123/api/user/tokenInfo\",{\n        params:{\n          token: this.token\n        }\n      })\n      .then(resp => {\n        localStorage.setItem('currUser',JSON.stringify(resp.data.data))\n        console.log(JSON.parse(localStorage.getItem('currUser')));\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    }\n  },\n};\n</script>\n\n<style>\nbody {\n  background-color: #445469;\n}\n#poster {\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  position: fixed;\n}\nbody {\n  margin: 0px;\n  padding: 0px;\n}\n.login-container {\n  border-right: 15px;\n  background-clip: padding-box;\n  margin: 90px auto;\n  width: 350px;\n  padding: 35px 35px 15px 35px;\n  background: #fff;\n  border: 1px solid #eaeaea;\n  box-shadow: 0 0 20px #cac6c6;\n}\n.login_title {\n  margin: 0px auto 40px auto;\n  text-align: center;\n  color: #505458;\n}\n</style>"],"mappings":";AAwCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,KAAA;QACAC,QAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,eAAAR,SAAA,CAAAC,KAAA;MACAK,QAAA,CAAAE,MAAA,kBAAAR,SAAA,CAAAE,QAAA;MACA,KAAAO,KAAA,CACAC,IAAA,0CAAAJ,QAAA,EACAK,IAAA,CAAAC,IAAA;QAEA,IAAAb,IAAA,GAAAa,IAAA,CAAAb,IAAA;QACA,IAAAA,IAAA,CAAAc,OAAA;UACAC,YAAA,CAAAC,OAAA,UAAAhB,IAAA,CAAAA,IAAA,CAAAI,KAAA;UACA,KAAAA,KAAA,GAAAJ,IAAA,CAAAA,IAAA,CAAAI,KAAA;UACA,KAAAa,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;YAAAC,IAAA;UAAA;UACA,KAAAC,QAAA;YACAP,OAAA,EAAAd,IAAA,CAAAc,OAAA;YACAQ,IAAA;UACA;QACA;UACA,KAAAD,QAAA;YACAP,OAAA,EAAAd,IAAA,CAAAc,OAAA;YACAQ,IAAA;UACA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,WAAA;MACA,KAAAT,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACAH,QAAA;MACA,KAAAP,KAAA,CAAAkB,GAAA;QACAC,MAAA;UACAzB,KAAA,OAAAA;QACA;MACA,GACAQ,IAAA,CAAAC,IAAA;QACAE,YAAA,CAAAC,OAAA,aAAAc,IAAA,CAAAC,SAAA,CAAAlB,IAAA,CAAAb,IAAA,CAAAA,IAAA;QACAyB,OAAA,CAAAC,GAAA,CAAAI,IAAA,CAAAE,KAAA,CAAAjB,YAAA,CAAAkB,OAAA;MACA,GACAV,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}