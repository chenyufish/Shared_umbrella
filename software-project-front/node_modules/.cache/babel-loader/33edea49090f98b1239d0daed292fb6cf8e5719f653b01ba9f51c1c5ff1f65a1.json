{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AnalyzeAll\",\n  data() {\n    return {\n      token: localStorage.getItem(\"token\"),\n      profitData: [],\n      orderGid: [],\n      profitObj: {},\n      drawObj: []\n    };\n  },\n  methods: {\n    getOrderData() {\n      this.axios.get(\"http://localhost:8888/order/profitAll\", {\n        params: {\n          token: this.token\n        }\n      }, {\n        emulateJSON: true\n      }).then(resp => {\n        if (resp.data.message === \"ok\") {\n          // console.log(resp);\n          this.profitData = resp.data.data.prts;\n          this.orderGid = resp.data.data.gIds;\n          console.log(JSON.stringify(this.profitData) + \"利润\", JSON.stringify(this.orderGid) + \"订单ID\");\n          for (let i = 0; i < this.orderGid.length; i++) {\n            this.profitObj[this.orderGid[i]] = 0;\n          }\n          for (let i = 0; i < this.orderGid.length; i++) {\n            this.profitObj[this.orderGid[i]] += this.profitData[i];\n          }\n\n          //   console.log(this.profitObj);\n          // 获取key\n          let keys = Object.keys(this.profitObj);\n          keys.forEach(item => {\n            this.drawObj.push({\n              name: \"商品ID\" + item,\n              value: this.profitObj[item]\n            });\n          });\n          console.log(this.drawObj);\n          this.drowPie();\n          this.drowLine();\n        }\n        // // console.log(resp.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    drowLine() {\n      var myChart = this.$echarts.init(document.getElementById(\"main\"));\n      myChart.setOption({\n        title: {\n          text: \"销售额\"\n        },\n        xAxis: {\n          type: \"category\",\n          data: this.orderGid\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [{\n          data: this.drawObj,\n          type: \"line\"\n        }]\n      });\n    },\n    drowPie() {\n      var myChart = this.$echarts.init(document.getElementById(\"pie\"));\n      myChart.setOption({\n        title: {\n          text: \"商品总销量占比\"\n        },\n        series: [{\n          type: \"pie\",\n          data: this.drawObj,\n          encode: {\n            itemName: \"name\",\n            // 指定数据源中的哪个字段作为饼图的名称\n            value: \"value\" // 指定数据源中的哪个字段作为饼图的值\n          }\n        }]\n      });\n    }\n  },\n\n  mounted() {\n    this.getOrderData();\n  }\n};","map":{"version":3,"names":["name","data","token","localStorage","getItem","profitData","orderGid","profitObj","drawObj","methods","getOrderData","axios","get","params","emulateJSON","then","resp","message","prts","gIds","console","log","JSON","stringify","i","length","keys","Object","forEach","item","push","value","drowPie","drowLine","catch","error","myChart","$echarts","init","document","getElementById","setOption","title","text","xAxis","type","yAxis","series","encode","itemName","mounted"],"sources":["src/views/AnalyzeAll/index.vue"],"sourcesContent":["<template>\n    <div class=\"Analyze\">\n      <div class=\"chart-container\">\n        <div id=\"main\" style=\"width: 800px; height: 800px\"></div>\n        <div id=\"pie\" style=\"width: 800px; height: 800px\"></div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"AnalyzeAll\",\n    data() {\n      return {\n        token: localStorage.getItem(\"token\"),\n        profitData: [],\n        orderGid: [],\n        profitObj: {},\n        drawObj: [],\n      };\n    },\n    methods: {\n      getOrderData() {\n        this.axios\n          .get(\n            \"http://localhost:8888/order/profitAll\",\n            {\n              params: {\n                token: this.token\n              },\n            },\n            { emulateJSON: true }\n          )\n          .then((resp) => {\n            if (resp.data.message === \"ok\") {\n              // console.log(resp);\n              this.profitData = resp.data.data.prts;\n              this.orderGid = resp.data.data.gIds;\n              console.log(JSON.stringify(this.profitData)+\"利润\",JSON.stringify(this.orderGid)+\"订单ID\");\n              for(let i = 0; i < this.orderGid.length; i++){\n                this.profitObj[this.orderGid[i]] = 0;\n              }\n              for(let i = 0; i < this.orderGid.length; i++){\n                this.profitObj[this.orderGid[i]] += this.profitData[i];\n              }\n\n            //   console.log(this.profitObj);\n              // 获取key\n              let keys = Object.keys(this.profitObj);\n              \n              keys.forEach(item => {\n                    this.drawObj.push({\n                        name: \"商品ID\" + item,\n                        value: this.profitObj[item]\n                    })\n              });\n              console.log(this.drawObj);\n             \n              this.drowPie();\n  \n              this.drowLine();\n            }\n            // // console.log(resp.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      },\n      drowLine() {\n        var myChart = this.$echarts.init(document.getElementById(\"main\"));\n  \n        myChart.setOption({\n          title: {\n            text: \"销售额\",\n          },\n          xAxis: {\n            type: \"category\",\n            data: this.orderGid,\n          },\n          yAxis: {\n            type: \"value\",\n          },\n          series: [\n            {\n              data: this.drawObj,\n              type: \"line\",\n            },\n          ],\n        });\n      },\n      drowPie() {\n       \n  \n        var myChart = this.$echarts.init(document.getElementById(\"pie\"));\n        myChart.setOption({\n          title: {\n            text: \"商品总销量占比\",\n          },\n          series: [\n            {\n              type: \"pie\",\n              data: this.drawObj,\n              encode: {\n                itemName: \"name\", // 指定数据源中的哪个字段作为饼图的名称\n                value: \"value\", // 指定数据源中的哪个字段作为饼图的值\n              },\n            },\n          ],\n        });\n      },\n    },\n    mounted() {\n      this.getOrderData();\n    },\n  };\n  </script>\n  \n  <style>\n  .chart-container {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n  \n  .chart {\n    flex: 1;\n  }\n  </style>"],"mappings":";AAUA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA,EAAAC,YAAA,CAAAC,OAAA;MACAC,UAAA;MACAC,QAAA;MACAC,SAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA,KAAAC,KAAA,CACAC,GAAA,CACA,yCACA;QACAC,MAAA;UACAX,KAAA,OAAAA;QACA;MACA,GACA;QAAAY,WAAA;MAAA,CACA,EACAC,IAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAAf,IAAA,CAAAgB,OAAA;UACA;UACA,KAAAZ,UAAA,GAAAW,IAAA,CAAAf,IAAA,CAAAA,IAAA,CAAAiB,IAAA;UACA,KAAAZ,QAAA,GAAAU,IAAA,CAAAf,IAAA,CAAAA,IAAA,CAAAkB,IAAA;UACAC,OAAA,CAAAC,GAAA,CAAAC,IAAA,CAAAC,SAAA,MAAAlB,UAAA,UAAAiB,IAAA,CAAAC,SAAA,MAAAjB,QAAA;UACA,SAAAkB,CAAA,MAAAA,CAAA,QAAAlB,QAAA,CAAAmB,MAAA,EAAAD,CAAA;YACA,KAAAjB,SAAA,MAAAD,QAAA,CAAAkB,CAAA;UACA;UACA,SAAAA,CAAA,MAAAA,CAAA,QAAAlB,QAAA,CAAAmB,MAAA,EAAAD,CAAA;YACA,KAAAjB,SAAA,MAAAD,QAAA,CAAAkB,CAAA,WAAAnB,UAAA,CAAAmB,CAAA;UACA;;UAEA;UACA;UACA,IAAAE,IAAA,GAAAC,MAAA,CAAAD,IAAA,MAAAnB,SAAA;UAEAmB,IAAA,CAAAE,OAAA,CAAAC,IAAA;YACA,KAAArB,OAAA,CAAAsB,IAAA;cACA9B,IAAA,WAAA6B,IAAA;cACAE,KAAA,OAAAxB,SAAA,CAAAsB,IAAA;YACA;UACA;UACAT,OAAA,CAAAC,GAAA,MAAAb,OAAA;UAEA,KAAAwB,OAAA;UAEA,KAAAC,QAAA;QACA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAf,OAAA,CAAAC,GAAA,CAAAc,KAAA;MACA;IACA;IACAF,SAAA;MACA,IAAAG,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MAEAJ,OAAA,CAAAK,SAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACA5C,IAAA,OAAAK;QACA;QACAwC,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACA9C,IAAA,OAAAO,OAAA;UACAqC,IAAA;QACA;MAEA;IACA;IACAb,QAAA;MAGA,IAAAI,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACAJ,OAAA,CAAAK,SAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAI,MAAA,GACA;UACAF,IAAA;UACA5C,IAAA,OAAAO,OAAA;UACAwC,MAAA;YACAC,QAAA;YAAA;YACAlB,KAAA;UACA;QACA;MAEA;IACA;EACA;;EACAmB,QAAA;IACA,KAAAxC,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}