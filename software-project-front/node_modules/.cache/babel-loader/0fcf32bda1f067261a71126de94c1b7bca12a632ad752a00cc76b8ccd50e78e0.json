{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Analyze\",\n  data() {\n    return {\n      token: localStorage.getItem(\"token\"),\n      currUser: JSON.parse(localStorage.getItem(\"currUser\")),\n      orderData: [],\n      orderDate: [],\n      orderAmount: [],\n      orderGid: [],\n      orderAllCount: null,\n      gidObj: {}\n    };\n  },\n  methods: {\n    getOrderData() {\n      this.axios.get(\"http://localhost:8888/order/queryData\", {\n        params: {\n          token: this.token,\n          dStatue: true,\n          sId: 1\n        }\n      }, {\n        emulateJSON: true\n      }).then(resp => {\n        if (resp.data.message === \"查询成功\") {\n          // console.log(resp);\n          this.orderData = resp.data.data;\n          this.orderData.sort(function (a, b) {\n            return Date.parse(a.ddate) - Date.parse(b.ddate);\n          });\n          // console.log(this.orderData);\n          this.orderAllCount = resp.count;\n          this.orderData.forEach(item => {\n            this.orderDate.push(item.ddate);\n            this.orderAmount.push(item.damount);\n            this.orderGid.push(item.gid);\n          });\n          // console.log(this.orderDate);\n          // console.log(this.orderAmount);\n          // console.log(this.orderGid);\n          this.gidObj = this.orderGid.reduce(function (acc, cur) {\n            if (acc[cur]) {\n              acc[cur]++; // 已存在的数值，数量加1\n            } else {\n              acc[cur] = 1; // 不存在的数值，初始化为1\n            }\n\n            return acc;\n          }, {});\n          console.log(this.gidObj);\n          this.drowPie();\n          this.drowLine();\n        }\n        // console.log(resp.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    drowLine() {\n      var myChart = this.$echarts.init(document.getElementById(\"main\"));\n      myChart.setOption({\n        title: {\n          text: \"销售额\"\n        },\n        xAxis: {\n          type: \"category\",\n          data: this.orderDate,\n          axisLabel: {\n            formatter: function (value) {\n              return new Date(value).toLocaleDateString();\n            }\n          }\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [{\n          data: this.orderAmount,\n          type: \"line\"\n        }]\n      });\n    },\n    drowPie() {\n      let keys = Object.keys(this.gidObj);\n      var data = [];\n      keys.forEach(item => {\n        console.log(item, this.gidObj[item]);\n        data.push({\n          value: this.gidObj[item],\n          name: \"商品ID:\" + item\n        });\n      });\n      console.log(data, \"<<<<< Pie图\");\n      var myChart = this.$echarts.init(document.getElementById(\"pie\"));\n      myChart.setOption({\n        title: {\n          text: \"商品销量占比\"\n        },\n        series: [{\n          type: \"pie\",\n          data: data,\n          encode: {\n            itemName: \"name\",\n            // 指定数据源中的哪个字段作为饼图的名称\n            value: \"value\" // 指定数据源中的哪个字段作为饼图的值\n          }\n        }]\n      });\n    }\n  },\n\n  mounted() {\n    this.getOrderData();\n  }\n};","map":{"version":3,"names":["name","data","token","localStorage","getItem","currUser","JSON","parse","orderData","orderDate","orderAmount","orderGid","orderAllCount","gidObj","methods","getOrderData","axios","get","params","dStatue","sId","emulateJSON","then","resp","message","sort","a","b","Date","ddate","count","forEach","item","push","damount","gid","reduce","acc","cur","console","log","drowPie","drowLine","catch","error","myChart","$echarts","init","document","getElementById","setOption","title","text","xAxis","type","axisLabel","formatter","value","toLocaleDateString","yAxis","series","keys","Object","encode","itemName","mounted"],"sources":["src/views/Analyze/index.vue"],"sourcesContent":["<template>\n  <div class=\"Analyze\">\n    <div class=\"chart-container\">\n      <div id=\"main\" style=\"width: 800px; height: 800px\"></div>\n      <div id=\"pie\" style=\"width: 800px; height: 800px\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Analyze\",\n  data() {\n    return {\n      token: localStorage.getItem(\"token\"),\n      currUser: JSON.parse(localStorage.getItem(\"currUser\")),\n      orderData: [],\n      orderDate: [],\n      orderAmount: [],\n      orderGid: [],\n      orderAllCount: null,\n      gidObj: {},\n    };\n  },\n  methods: {\n    getOrderData() {\n      this.axios\n        .get(\n          \"http://localhost:8888/order/queryData\",\n          {\n            params: {\n              token: this.token,\n              dStatue: true,\n              sId: 1,\n            },\n          },\n          { emulateJSON: true }\n        )\n        .then((resp) => {\n          if (resp.data.message === \"查询成功\") {\n            // console.log(resp);\n            this.orderData = resp.data.data;\n\n            this.orderData.sort(function (a, b) {\n              return Date.parse(a.ddate) - Date.parse(b.ddate);\n            });\n            // console.log(this.orderData);\n            this.orderAllCount = resp.count;\n            this.orderData.forEach((item) => {\n              this.orderDate.push(item.ddate);\n              this.orderAmount.push(item.damount);\n              this.orderGid.push(item.gid);\n            });\n            // console.log(this.orderDate);\n            // console.log(this.orderAmount);\n            // console.log(this.orderGid);\n            this.gidObj = this.orderGid.reduce(function (acc, cur) {\n              if (acc[cur]) {\n                acc[cur]++; // 已存在的数值，数量加1\n              } else {\n                acc[cur] = 1; // 不存在的数值，初始化为1\n              }\n              return acc;\n            }, {});\n            console.log(this.gidObj);\n            this.drowPie();\n\n            this.drowLine();\n          }\n          // console.log(resp.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    drowLine() {\n      var myChart = this.$echarts.init(document.getElementById(\"main\"));\n\n      myChart.setOption({\n        title: {\n          text: \"销售额\",\n        },\n        xAxis: {\n          type: \"category\",\n          data: this.orderDate,\n          axisLabel: {\n            formatter: function (value) {\n              return new Date(value).toLocaleDateString();\n            },\n          },\n        },\n        yAxis: {\n          type: \"value\",\n        },\n        series: [\n          {\n            data: this.orderAmount,\n            type: \"line\",\n          },\n        ],\n      });\n    },\n    drowPie() {\n      let keys = Object.keys(this.gidObj);\n      var data = [];\n      keys.forEach((item) => {\n        console.log(item, this.gidObj[item]);\n        data.push({\n          value: this.gidObj[item],\n          name: \"商品ID:\" + item,\n        });\n      });\n      console.log(data,\"<<<<< Pie图\");\n\n      var myChart = this.$echarts.init(document.getElementById(\"pie\"));\n      myChart.setOption({\n        title: {\n          text: \"商品销量占比\",\n        },\n        series: [\n          {\n            type: \"pie\",\n            data: data,\n            encode: {\n              itemName: \"name\", // 指定数据源中的哪个字段作为饼图的名称\n              value: \"value\", // 指定数据源中的哪个字段作为饼图的值\n            },\n          },\n        ],\n      });\n    },\n  },\n  mounted() {\n    this.getOrderData();\n  },\n};\n</script>\n\n<style>\n.chart-container {\n  display: flex;\n  flex-wrap: nowrap;\n}\n\n.chart {\n  flex: 1;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}